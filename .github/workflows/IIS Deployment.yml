# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: IIS Deployment - DemoCICDTraining

on:
   push:
     branches: [ "develop" ]  # push: Automatically run the workflow when any push event will trigger
   pull_request:
     branches: [ "develop" ]  # pull_request: Automatically run the workflow when any pull request will create
   workflow_dispatch:         # To run the workflow manually you need to add workflow_dispatch

jobs:
  build:
   runs-on: [self-hosted, LocalRun]
   steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run:  dotnet publish -o publish

      - name: Deploy
        run: |
           Import-Module WebAdministration
           Stop-WebSite 'Default Web Site'
           $dllPaths = @(
           'C:\PublishOnIIS\DemoCICD\CICDPipelineDemo.dll'
           )
           foreach ($dllPath in $dllPaths) {
              if (Test-Path $dllPath) {
                  $processesUsingDll = Get-Process | Where-Object { $_.Modules.ModuleName -eq (Get-Item $dllPath).Name }
                  foreach ($process in $processesUsingDll) {
                      Stop-Process -Id $process.Id -Force
                  }
              }
           }
           Copy-Item publish\* C:\PublishOnIIS\DemoCICD -Recurse -Force
           $appPool = Get-Item "IIS:\AppPools\DefaultAppPool"
           if($appPool.State -eq 'Started')
           {
             Stop-WebAppPool -Name $appPool.Name 
           }
           Start-Sleep -Seconds 10 
           Start-WebAppPool -Name $appPool.Name
           Start-WebSite 'Default Web Site'
